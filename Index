<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Fitness & GATE Tracker</title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        body {
            font-family: Arial, sans-serif;
            margin: 20px;
            background: linear-gradient(270deg, #ff9a9e, #fad0c4, #fad0c4, #ffdde1);
            background-size: 400% 400%;
            animation: gradientBG 15s ease infinite;
        }
        @keyframes gradientBG {
            0% { background-position: 0% 50%; }
            50% { background-position: 100% 50%; }
            100% { background-position: 0% 50%; }
        }
        .container { display: flex; flex-wrap: wrap; gap: 20px; }
        .card { border: 1px solid #ccc; padding: 20px; border-radius: 10px; width: 350px; background: white; }
        input, button, select { width: 100%; padding: 10px; margin-top: 10px; }
        table { width: 100%; border-collapse: collapse; margin-top: 10px; }
        th, td { border: 1px solid #ccc; padding: 8px; text-align: left; }
        .delete-btn { background: red; color: white; border: none; padding: 5px; cursor: pointer; }
        canvas { max-width: 100%; height: 200px; }
    </style>
</head>
<body>
    <h1>Fitness & GATE Tracker</h1>
    <div class="container">
        <div class="card">
            <h2>Weight</h2>
            <input type="number" id="weightInput" placeholder="Enter weight (kg)">
            <button onclick="logData('weight')">Log</button>
            <table id="weightTable"></table>
            <canvas id="weightChart"></canvas>
        </div>
        <div class="card">
            <h2>Blood Pressure</h2>
            <input type="text" id="bpInput" placeholder="Enter BP (e.g., 120/80)">
            <button onclick="logData('bp')">Log</button>
            <table id="bpTable"></table>
            <canvas id="bpChart"></canvas>
        </div>
        <div class="card">
            <h2>GATE Preparation</h2>
            <select id="gateSubject">
                <option value="Mathematics">Mathematics</option>
                <option value="Fluid Mechanics">Fluid Mechanics</option>
                <option value="Thermodynamics">Thermodynamics</option>
                <option value="Heat Transfer">Heat Transfer</option>
                <option value="Process Control">Process Control</option>
                <option value="Chemical Reaction Engineering">Chemical Reaction Engineering</option>
                <option value="Mass Transfer">Mass Transfer</option>
                <option value="Instrumentation">Instrumentation</option>
            </select>
            <input type="number" id="studyHours" placeholder="Hours studied">
            <button onclick="logData('gate')">Log</button>
            <table id="gateTable"></table>
            <canvas id="gateChart"></canvas>
        </div>
    </div>
    <script>
        let charts = {};

        function logData(type) {
            let input;
            if (type === 'gate') {
                const subject = document.getElementById("gateSubject").value;
                const hours = document.getElementById("studyHours").value.trim();
                if (!hours) { alert("Please enter hours studied."); return; }
                input = `${subject}: ${hours} hrs`;
            } else {
                input = document.getElementById(`${type}Input`).value.trim();
            }
            if (!input) { alert("Please enter a valid value."); return; }
            
            const entry = { type, value: input, date: new Date().toLocaleString() };
            saveToLocalStorage(entry);
        }

        function saveToLocalStorage(entry) {
            let data = JSON.parse(localStorage.getItem("fitnessGateData")) || [];
            data.push(entry);
            localStorage.setItem("fitnessGateData", JSON.stringify(data));
            fetchData();
        }

        function fetchData() {
            let data = JSON.parse(localStorage.getItem("fitnessGateData")) || [];
            populateTables(data);
            updateCharts(data);
        }

        function populateTables(data) {
            const tables = { weight: "weightTable", bp: "bpTable", gate: "gateTable" };
            Object.keys(tables).forEach(type => {
                const table = document.getElementById(tables[type]);
                table.innerHTML = `<tr><th>Date</th><th>Value</th><th>Action</th></tr>`;
                data.filter(row => row.type === type).forEach((row, index) => {
                    table.innerHTML += `<tr>
                        <td>${row.date}</td>
                        <td>${row.value}</td>
                        <td><button class="delete-btn" onclick="deleteEntry(${index})">X</button></td>
                    </tr>`;
                });
            });
        }

        function deleteEntry(index) {
            let data = JSON.parse(localStorage.getItem("fitnessGateData")) || [];
            data.splice(index, 1);
            localStorage.setItem("fitnessGateData", JSON.stringify(data));
            fetchData();
        }

        function updateCharts(data) {
            const categories = { weight: [], bp: [], gate: [] };
            const dates = { weight: [], bp: [], gate: [] };

            data.forEach(entry => {
                if (entry.type === 'weight') {
                    categories.weight.push(parseFloat(entry.value));
                    dates.weight.push(entry.date);
                } else if (entry.type === 'bp') {
                    categories.bp.push(entry.value);
                    dates.bp.push(entry.date);
                } else if (entry.type === 'gate') {
                    const hours = parseFloat(entry.value.split(': ')[1].replace(' hrs', ''));
                    categories.gate.push(hours);
                    dates.gate.push(entry.date);
                }
            });

            renderChart('weightChart', dates.weight, categories.weight, 'Weight (kg)');
            renderChart('bpChart', dates.bp, categories.bp, 'Blood Pressure');
            renderChart('gateChart', dates.gate, categories.gate, 'GATE Study Hours');
        }

        function renderChart(id, labels, data, label) {
            if (charts[id]) charts[id].destroy();
            const ctx = document.getElementById(id).getContext('2d');
            charts[id] = new Chart(ctx, {
                type: 'line',
                data: {
                    labels,
                    datasets: [{ label, data, borderColor: 'blue', fill: false }]
                },
                options: { responsive: true, maintainAspectRatio: false }
            });
        }

        window.onload = fetchData;
    </script>
</body>
</html>
